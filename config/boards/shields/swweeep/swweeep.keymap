#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SYM     1
#define NAV     2
#define FUNC    3
#define GAMING  4
#define GFUNC   5
#define BT      6



&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_undo {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp LC(Z)>;
        };
        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp SEMI>;
        };
        combo_bt_left {
            timeout-ms = <50>;
            key-positions = <30 31 32>;
            bindings = <&tog BT>;
        };
        combo_bt_right {
            timeout-ms = <50>;
            key-positions = <33 34 35>;
            bindings = <&tog BT>;
        };
        combo_gaming_mode {
            timeout-ms = <50>;
            key-positions = <0 1 2>;
            bindings = <&tog GFUNC>;
        };
        
    };
};

/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        hs: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        ht: homerow_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Default";

            bindings = <
    &kp Q        &kp W        &kp F       &kp P         &kp B                                       &kp J         &kp L        &kp U         &kp Y        &ht UNDER MINUS
    &hm LCTL A   &hm LGUI R   &hm LALT S  &hs LSHIFT T  &kp G                                       &kp M         &hs RSHIFT N &hm LALT E    &hm RGUI I   &hm RCTL O
    &kp Z        &kp X        &kp C       &kp D         &kp V                                       &kp K         &kp H        &ht SQT COMMA &ht EXCL DOT &ht QMARK FSLH
                                          &kp DEL       &lt NAV RET  &lt FUNC TAB  &lt MEDIA BSPC   &lt SYM SPACE &ht COLON SEMI
            >;
        };

        sym_layer {
            label = "!@#$%^&*;";

            bindings = <
    &kp EXCL     &kp AT       &kp HASH        &kp DLLR         &kp PRCNT                                   &kp CARET     &kp AMPS        &kp ASTRK     &kp DQT     &kp EQUAL
    &kp MINUS    &kp LBKT     &kp LBRC        &kp LPAR         &kp LT                                      &kp GT        &kp RPAR        &kp RBRC      &kp RBKT    &kp PLUS
    &kp CAPS     &kp GRAVE    &kp TILDE       &trans           &kp PIPE                                    &trans        &trans          &trans        &trans      &kp BSLH
                                              &trans           &kp RET       &kp DEL        &kp BSPC       &trans        &trans
            >;
        };

        nav_layer {
            label = "Navigation";

            bindings = <
    &kp ESC      &kp PG_UP    &kp UP      &kp PG_DN     &trans                                      &kp ASTRK     &kp N7       &kp N8        &kp N9      &kp PLUS
    &kp HOME     &kp LEFT     &kp DOWN    &kp RIGHT     &kp END                                     &kp FSLH      &kp N4       &kp N5        &kp N6      &kp MINUS
    &trans       &trans       &trans      &trans        &trans                                      &kp DOT       &kp N1       &kp N2        &kp N3      &kp EQUAL
                                          &trans        &trans       &kp TAB       &kp BSPC         &kp SPACE     &kp N0
            >;
        };
        

        func_layer {
            label = "Function";

            bindings = <
    &trans       &kp LS(PG_UP) &kp LS(UP)   &kp LS(PG_DN) &trans                                         &kp C_MUTE       &kp F7       &kp F8        &kp F9      &kp F10
    &kp LS(HOME) &kp LS(LEFT)  &kp LS(DOWN) &kp LS(RIGHT) &kp LS(END)                                    &kp C_VOL_UP     &kp F4       &kp F5        &kp F6      &kp F11
    &trans       &trans        &trans       &trans        &trans                                         &kp C_VOL_DN     &kp F1       &kp F2        &kp F3      &kp F12
                                            &trans        &trans     &trans      &kp C_PLAY_PAUSE  &kp SPACE        &trans
            >;
        };

        gaming_layer {
            label = "Gaming";

            bindings = <
    &kp TAB       &kp Q       &kp W        &kp E            &kp R                                    &kp C_MUTE       &kp C_PREV   &kp C_PP     &kp C_NEXT     &trans
    &kp LSHFT     &kp A       &kp S        &kp D            &kp F                                    &kp C_VOL_UP     &trans       &trans       &trans         &trans
    &kp LCTRL     &kp Z       &kp X        &kp C            &kp V                                    &kp C_VOL_DN     &trans       &trans       &trans         &trans
                                            &kp B            &lt GFUNC SPACE        &kp CAPS       &trans         &trans       &trans 
            >;
        };

        gaming_func_layer {
            label = "G Func";

            bindings = <
    &kp ESC      &kp F1      &kp F2       &kp F3           &kp F4                                      &trans       &trans       &trans       &trans         &trans
    &trans       &kp 1       &kp 2        &kp 3            &kp 4                                      &trans       &trans       &trans       &trans         &trans
    &kp LALT     &kp 5       &kp 6        &kp 7            &kp 8                                      &trans       &trans       &trans       &trans         &trans
                                            &trans            &trans        &trans         &trans         &trans       &trans 
            >;
        };

        bluetooth_layer {
            label = "Bluetooth";

            bindings = <
    &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                            &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4
    &trans        &bt BT_PRV   &trans       &bt BT_NXT   &trans                                  &trans        &bt BT_PRV   &trans       &bt BT_NXT   &trans
    &bt BT_CLR    &trans       &trans       &out OUT_USB &out OUT_BLE                            &out OUT_BLE  &out OUT_USB &trans       &trans       &bt BT_CLR
                                            &trans       &trans        &trans         &trans     &trans        &trans
            >;
        };
    };
};
